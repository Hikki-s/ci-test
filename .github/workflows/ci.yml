name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-modules-cache-key: ${{ steps.cache.outputs.cache-hit-is == 'true' && '${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}' || '' }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [prettier-check, eslint, stylelint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node-modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run lint task
        run: |
          case "${{ matrix.task }}" in
            prettier-check)
              npm run format:check
              ;;
            eslint)
              npm run lint
              ;;
            stylelint)
              npm run stylelint
              ;;
          esac

  build:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node-modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run build script
        run: npm run build -- --prod

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use node-modules cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ needs.setup.outputs.node-modules-cache-key }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Set Git user identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx angular-cli-ghpages --dir=dist --no-silent
